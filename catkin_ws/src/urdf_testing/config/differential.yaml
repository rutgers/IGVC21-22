type : "diff_drive_controller/DiffDriveController"
left_wheel : "joint_left_wheel"
right_wheel : "joint_right_wheel"
publish_rate: 50.0 # default: 50 
pose_covariance_diagonal : [0.001, .001, 1000000., 1000000., 1000000., 1000.] 
twist_covariance_diagonal: [0.001, .001, 1000000., 1000000., 1000000., 1000.]  # Wheel separation and diameter. These are both optional. 
# diff_drive_controller will attempt to read either one or both from the 
# URDF if not specified as a parameter 
wheel_separation : 0.4 
wheel_radius : 0.2  # Wheel separation and radius multipliers 
wheel_separation_multiplier: 1.0 # default: 1.0  
wheel_radius_multiplier : 1.0 # default: 1.0  # Velocity commands timeout [s], default 0.5 
cmd_vel_timeout: 0.25  # Base frame_id 
base_frame_id: base_link #default: base_link  # Velocity and acceleration limits 
# Whenever a min_* is unspecified, default to -max_* 
linear: 
  x: 
    has_velocity_limits : true 
    max_velocity : 1.0 # m/s 
    min_velocity : -0.5 # m/s 
    has_acceleration_limits: true 
    max_acceleration : 0.8 # m/s² 
    min_acceleration : -0.4 # m/s² 
    has_jerk_limits : true 
    max_jerk : 5.0 # m/s³ 
angular: 
  z: 
    has_velocity_limits : true 
    max_velocity : 1.7 # rad/s 
    min_velocity : -1.7 # rad/s 
    has_acceleration_limits: true 
    max_acceleration : 1.5 # rad/s² 
    has_jerk_limits : true 
    max_jerk : 2.5 # rad/s³

  # type: "diff_drive_controller/DiffDriveController"
# publish_rate: 50

# left_wheel: ['joint_left_wheel', 'c_left']
# right_wheel: ['joint_right_wheel', 'c_front']

# wheel_separation: 0.44

# # Odometry covariances for the encoder output of the robot. These values should
# # be tuned to your robot's sample odometry data, but these values are a good place
# # to start
# pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
# twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

# # Top level frame (link) of the robot description
# base_frame_id: base_link

# # Velocity and acceleration limits for the robot
# linear:
#   x:
#     has_velocity_limits    : false
#     max_velocity           : 10000   # m/s
#     has_acceleration_limits: true
#     max_acceleration       : 1000   # m/s^2
# angular:
#   z:
#     has_velocity_limits    : false
#     max_velocity           : 100000   # rad/s
#     has_acceleration_limits: true
#     max_acceleration       : 60   # rad/s^2



# type: "diff_drive_controller/DiffDriveController"
# publish_rate: 50

# left_wheel: ['body_to_wheel1', 'body_to_wheel3']
# right_wheel: ['body_to_wheel2', 'body_to_wheel4']

# wheel_separation: 0.44

# # Odometry covariances for the encoder output of the robot. These values should
# # be tuned to your robot's sample odometry data, but these values are a good place
# # to start
# pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
# twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

# # Top level frame (link) of the robot description
# base_frame_id: base_link

# # Velocity and acceleration limits for the robot
# linear:
#   x:
#     has_velocity_limits    : false
#     max_velocity           : 10000   # m/s
#     has_acceleration_limits: true
#     max_acceleration       : 10   # m/s^2
# angular:
#   z:
#     has_velocity_limits    : false
#     max_velocity           : 100000   # rad/s
#     has_acceleration_limits: true
#     max_acceleration       : 60   # rad/s^2


